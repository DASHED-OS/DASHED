use crate::security::ai_pentests::pentest::ai_pentest_functions::PentestResult;

// Function to format a detailed report using a template
pub fn format_detailed_report(results: &[PentestResult]) -> String {
    let mut report = String::from("=== AI Pentest Detailed Report ===\n\n");

    for result in results {
        report.push_str(&format!(
            "Test Name: {}\nStatus: {}\nDetails: {}\n\n",
            result.test_name,
            if result.success { "Success" } else { "Failure" },
            result.details
        ));
    }

    report.push_str("=== End of Report ===\n");
    report
}

// Example usage
fn main() {
    let results = vec![
        PentestResult {
            test_name: "Basic AI Pentest".to_string(),
            success: true,
            details: "Target server1 is vulnerable.".to_string(),
        },
        PentestResult {
            test_name: "Basic AI Pentest".to_string(),
            success: false,
            details: "Target server2 is secure.".to_string(),
        },
    ];

    let report = format_detailed_report(&results);
    println!("{}", report);
}